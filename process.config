
params {
  out_dir = ''
}

process {
    errorStrategy = 'retry'
    maxRetries = 1
    withLabel :  STAR_2_7_3a_AlignReads  {
          time = '24h'
          penv = 'threaded'
          cpus = 4
          memory = '35G'
          publishDir.path = "${params.out_dir}/STAR"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf(".Log.out") > 0) "logs/$filename" 
                              else if  (filename.indexOf(".Log.final.out") > 0) "logs/$filename" 
                              else if  (filename.indexOf(".bam") > 0) "mapped/$filename" 
                              else if  (filename.indexOf(".SJ.out.tab") > 0) "SJ/$filename" 
                              else if  (filename.indexOf(".mate1") > 0) "unmapped/$filename" 
                              else if  (filename.indexOf(".mate2") > 0) "unmapped/$filename" }	 
     
    } 
    withLabel : SAMBAMBA_0_6_8_Index {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '10G'
          publishDir.path = "${params.out_dir}/STAR"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf(".bai") > 0) "mapped/$filename" }
    }
    withLabel : HTSeq_0_11_3_Count {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '25G'
          publishDir.path = "${params.out_dir}/HTSeq"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf(".txt") > 0) "read_counts/$filename" }
    }
    withLabel: RSeQC_3_0_1 {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '25G'
          publishDir.path = "${params.out_dir}/QC/RSeQC"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename ->
                         if (filename.indexOf("bam_stat.txt") > 0) "bam_stat/$filename"
                         else if (filename.indexOf("infer_experiment.txt") > 0) "infer_experiment/$filename"
                              else if (filename.indexOf("read_distribution.txt") > 0) "read_distribution/$filename"
                              else if (filename.indexOf("read_duplication.DupRate_plot.pdf") > 0) "read_duplication/$filename"
                              else if (filename.indexOf("read_duplication.DupRate_plot.r") > 0) "read_duplication/rscripts/$filename"
                              else if (filename.indexOf("read_duplication.pos.DupRate.xls") > 0) "read_duplication/dup_pos/$filename"
                              else if (filename.indexOf("read_duplication.seq.DupRate.xls") > 0) "read_duplication/dup_seq/$filename"
                              else if (filename.indexOf("RPKM_saturation.eRPKM.xls") > 0) "RPKM_saturation/rpkm/$filename"
                              else if (filename.indexOf("RPKM_saturation.rawCount.xls") > 0) "RPKM_saturation/counts/$filename"
                              else if (filename.indexOf("RPKM_saturation.saturation.pdf") > 0) "RPKM_saturation/$filename"
                              else if (filename.indexOf("RPKM_saturation.saturation.r") > 0) "RPKM_saturation/rscripts/$filename"
                              else if (filename.indexOf("inner_distance.txt") > 0) "inner_distance/$filename"
                              else if (filename.indexOf("inner_distance_freq.txt") > 0) "inner_distance/data/$filename"
                              else if (filename.indexOf("inner_distance_plot.r") > 0) "inner_distance/rscripts/$filename"
                              else if (filename.indexOf("inner_distance_plot.pdf") > 0) "inner_distance/plots/$filename"
                              else if (filename.indexOf("junction_plot.r") > 0) "junction_annotation/rscripts/$filename"
                              else if (filename.indexOf("junction.xls") > 0) "junction_annotation/data/$filename"
                    else if (filename.indexOf(".junction_annotation_log.txt") > 0) "junction_annotation/log/$filename"
                              else if (filename.indexOf("splice_events.pdf") > 0) "junction_annotation/events/$filename"
                              else if (filename.indexOf("splice_junction.pdf") > 0) "junction_annotation/junctions/$filename"
                              else if (filename.indexOf("junctionSaturation_plot.pdf") > 0) "junction_saturation/$filename"
                              else if (filename.indexOf("junctionSaturation_plot.r") > 0) "junction_saturation/rscripts/$filename"
                              else filename }
     }
    withLabel: Preseq_2_0_3 {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '15G'
          publishDir.path = "${params.out_dir}/QC/Preseq"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf(".ccurve.txt") > 0) "complexity_curve/$filename" }
    }
    withLabel : SAMBAMBA_0_6_8_Markdup {
          time = '24h'
          penv = 'threaded'
          cpus = 6
          memory = '32G'
          publishDir.path = "${params.out_dir}/MarkDup"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf(".bam") > 0) "markdup/$filename"
                              else if (filename.indexOf(".bai") > 0) "markdup/$filename" }
    }
    withLabel : GATK_4_1_3_0_SplitNCigarReads {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '12G'
    } 
    withLabel : Salmon_0_13_1_Quant {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '25G'
          publishDir.path = "${params.out_dir}/Salmon"
          publishDir.mode = 'copy'
    }
    withLabel : Fastp_0_20_1 {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '15G'
          publishDir.path = "${params.out_dir}/QC/fastp"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf(".fastq.gz") > 0) "clean_reads/$filename" 
                              else if (filename.indexOf(".json") > 0) "log/$filename" }
    }   
    withLabel: GATK_4_1_3_0_Splitintervals {
          memory = '12G'
          time = '1h'
     }
    withLabel : GATK_4_1_3_0_Baserecalibrator {
          memory = '9G'
          time = '1h'
    }
    withLabel : GATK_4_1_3_0_Gatherbaserecalibrator {
          memory = '6G'
          time = '1h'
    }
    withLabel : GATK_4_1_3_0_Applybqsr {
          memory = '9G'
          time = '1h'
    }
    withLabel : GATK_4_1_3_0_Haplotypecaller {
          memory = '25G'
          time = '12h'
    }   
    withLabel : GATK_4_1_3_0_Mergevcfs {
          memory = '14G'
          time = '4h'
          publishDir.path = "${params.out_dir}/GATK/vcf/raw"
          publishDir.mode = 'copy'
    }
    withLabel : GATK_4_1_3_0_Variantfiltration {
          memory = '10G'
          time = '4h'
          publishDir.path = "${params.out_dir}/GATK/vcf/filtered"
          publishDir.mode = 'copy'
    }
    withLabel : SAMBAMBA_0_6_8_mergebams {
          cpus = 10
          penv = 'threaded'
          memory = '5G'
          time = '2h'
          publishDir.path = "${params.out_dir}/GATK/bam_recall"
          publishDir.mode = 'copy'
    }
    withLabel : MultiQC_1_8 {
          memory = '4G'
          time = '1h'
          publishDir.path = "${params.out_dir}/report"
          publishDir.mode = 'copy'
    }
    withLabel : mergehtseqcounts {
          memory = '1G'
          time = '1h'
          publishDir.path = "${params.out_dir}/read_counts/HTSeq"
          publishDir.mode = 'copy'      
    }  
    withLabel : mergeSalmonCounts {
          memory = '1G'
          time = '1h'
          publishDir.path = "${params.out_dir}/read_counts/Salmon"
          publishDir.mode = 'copy'
    }
    withLabel : biconductor_3_20_7_edger_rpkm {
          memory = '5G'
          time = '1h'
          publishDir.path = "${params.out_dir}/read_counts"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf("_hts_readCounts_RPKM.txt") > 0) "HTSeq/$filename" 
                              else null }
    }
    withLabel : subread_2_0_0_FeatureCounts {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '25G'
          publishDir.path = "${params.out_dir}/read_counts"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf("_featureCounts.txt") > 0) "featureCounts/$filename" 
                               else if (filename.indexOf("_featureCounts.txt.summary") > 0) "featureCounts/summary/$filename"
                               else if (filename.indexOf("_featureCounts_matrix.txt") > 0) "featureCounts/$filename"
				       else null }
     }
     withLabel : STAR_2_7_3a_GenomeGenerate {
          time = '24h'
          penv = 'threaded'
          cpus = 12
          memory = '150G'
          publishDir.path = "${params.out_dir}/reference_genome"
          publishDir.mode = 'copy'
     }
     withLabel : Salmon_0_13_1_Index {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '25G'
          publishDir.path = "${params.out_dir}/reference_genome"
          publishDir.mode = 'copy'
     }
     withLabel : ucsc_377_GenePredToBed {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '15G'
          publishDir.path = "${params.out_dir}/reference_genome"
          publishDir.mode = 'copy'
     }
     withLabel : ucsc_377_GtfToGenePred {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '15G'
          publishDir.path = "${params.out_dir}/reference_genome"
          publishDir.mode = 'copy'
     }
     withLabel : PICARD_2_22_0_CreateSequenceDictionary {
          time = '1h'
          penv = 'threaded'
          memory = '10G'
          publishDir.path = "${params.out_dir}/reference_genome"
          publishDir.mode = 'copy'
     }
     withLabel : CreateIntervalList {
          time = '1h'
          publishDir.path = "${params.out_dir}/reference_genome"
          publishDir.mode = 'copy'
     }
     withLabel : getExonLenghts{
          time = '1h'
          publishDir.path = "${params.out_dir}/reference_genome"
          publishDir.mode = 'copy'
     }
     withLabel : SortMeRNA_4_2_0 {
          time = '24h'
          penv = 'threaded'
          cpus = 4
          memory = '25G'
          publishDir.path = "${params.out_dir}/QC/"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename ->
                         if (filename.indexOf("_rRNA_report.txt") > 0) "SorteMeRNA/$filename"
                         else null
          }
     }
     withLabel : TrimGalore_0_6_5 {
          time = '24h'
          penv = 'threaded'
          cpus = 4
          memory = '25G'
          publishDir.path = "${params.out_dir}/QC/"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename ->
                         if (filename.indexOf("_fastqc") > 0) "FastQC/$filename"
                         else if (filename.indexOf("trimming_report.txt") > 0) "TrimGalore/logs/$filename"
                         else null}
     } 
}

   
